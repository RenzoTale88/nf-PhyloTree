/*
 * ------------------------------------------------------
 *  Based on the nf-core/rnaseq Nextflow base config file
 * ------------------------------------------------------
 */

// Include parameters from configuration file
params {
  // I/O
  input = null
  ftype = null
  groups = null
  spp = null
  karyo = null
  bootstrap = 10
  outdir = "OUTPUT"
  dpi = 300
  size = 10
  mrkS = 1 
  subset = 1000000
  mrkR = '1.0'
  halfcalls = "m"
  allowExtrChr = '--allow-extra-chr'
  setHHmiss = '--set-hh-missing'

  // Other
  // nf-core
  mamba = false
  version = null
  custom_config_version = 'master'
  publish_dir_mode = 'copy'
  custom_config_base = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
  help = false
  enable_conda = false
  mamba = false
  monochrome_logs = false
  validate_params = true

  // nf-core
  validate_params = true
  show_hidden_params = false
  schema_ignore_params = 'show_hidden_params,validate_params,monochrome_logs,aws_queue,aws_image_prefix,wf'
}

includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/nfcore_custom.config" : "/dev/null"

// Load base.config by default for all pipelines
includeConfig "$baseDir/conf/base.config"

profiles {
  standard {
    docker.enabled = true
    // this ensures container is run as host user and group, but
    //    also adds host user to the within-container group
    docker.runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
    process.container = "tale88/phylotree:latest"
  }

  // Add a local run profile for within container runs
  local {
    process.executor = 'local'
    docker.enabled = false
    singularity.enabled = false
    podman.enabled = false
  }

  // using singularity instead of docker
  singularity {
    process.container = "tale88/phylotree:latest"
    singularity {
        enabled = true
        autoMounts = true
    }
  }
  stub {
    includeConfig "$baseDir/conf/stub.config"
    process.executor = 'local'
  }
  conda { 
    conda.enabled = true
    process.conda = "$projectDir/environment.yml"
    conda.createTimeout = '6 h'
    conda.useMamba = params.mamba ? true : false
  }
  docker { 
    process.container = "tale88/phylotree:latest"
    docker.enabled = true 
    docker.runOptions = '-u \$(id -u):\$(id -g)'
  }
  singularity { 
    process.container = "tale88/phylotree:latest"
    singularity.enabled = true
    singularity.autoMounts = true 
    singularity.cacheDir = "./.singularity"
    env {
      JOBLIB_TEMP_FOLDER="${PWD}"
    }
  }
  podman {
    process.container = "tale88/phylotree:latest"
    podman.enabled = true
  }
  eddie {
    process.container = "tale88/phylotree:latest"
    includeConfig "$projectDir/conf/eddie.config"
    env {
      JOBLIB_TEMP_FOLDER="${PWD}"
    }
  }
  eddie_conda {
    conda.enabled = true
    process.conda = "$projectDir/environment.yml"
    conda.createTimeout = '6 h'
    conda.useMamba = params.mamba ? true : false
    includeConfig "$projectDir/conf/eddie_conda.config"
    env {
      JOBLIB_TEMP_FOLDER="${PWD}"
    }
  }
}


// Add reporting configuration
timeline {
    enabled = true
    overwrite = true
    file    = "${params.outdir}/execution/execution_timeline.html"
}
report {
    enabled = true
    overwrite = true
    file    = "${params.outdir}/execution/execution_report.html"
}
trace {
    enabled = true
    overwrite = true
    file    = "${params.outdir}/execution/execution_trace.txt"
}
dag {
    enabled = true
    overwrite = true
    file    = "${params.outdir}/execution/pipeline_dag.html"
}

// Nextflow plugins
plugins {
    id 'nf-schema@2.1.1' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

manifest {
  name            = 'evotools/nf-PhyloTree'
  author          = 'Andrea Talenti'
  homePage        = 'https://github.com/RenzoTale88/nf-PhyloTree'
  description     = 'Nextflow workflow to compute bootstrapped phylogenetic trees.'
  mainScript      = 'main.nf'
  nextflowVersion = '>=23.04.0'
  version         = '2.0.0'
}

validation {
    defaultIgnoreParams = ["genomes"]
    help {
        enabled = true
        command = "nextflow run $manifest.name -profile <docker/singularity/.../institute> --input file_root --ftype vcf --outdir <OUTDIR>"
        fullParameter = "help_full"
        showHiddenParameter = "show_hidden"
        beforeText = """
==================================================
         __        _____  _           _     _______            
 _ __   / _|      |  __ \\| |         | |   |__   __|           
| \'_ \\ | |_ ______| |__) | |__  _   _| | ___  | |_ __ ___  ___ 
| | | ||  _|______|  ___/| \'_ \\| | | | |/ _ \\ | | \'__/ _ \\/ _ \\
| | | || |        | |    | | | | |_| | | (_) || | | |  __/  __/
|_| |_||_|        |_|    |_| |_|\\__, |_|\\___/ |_|_|  \\___|\\___|
                                 __/ |                         
                                |___/                          
==================================================

Version: ${manifest.version}

"""
    }
    summary {
        beforeText = validation.help.beforeText
    }
}
