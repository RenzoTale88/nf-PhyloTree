{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/evotools/nf-X-rAI/main/nextflow_schema.json",
    "title": "evotools/nf-X-rAI pipeline parameters",
    "workflow_title": "Nextflow X-ray AI processing",
    "description": "Nextflow workflow to segment and score images.",
    "url": "https://github.com/evotools/nf-X-rAI",
    "type": "object",
    "$defs": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": [
                "input",
                "outdir",
                "ftype"
            ],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Input file root name.",
                    "help_text": "The path to the root name of the input file (e.g. `./input` for `./input.ped` and `./input.map`)."
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "ftype": {
                    "title": "Input type",
                    "type": "string",
                    "description": "File type.",
                    "help_text": "Provide the appropriate input file type.",
                    "enum": [
                        "vcf",
                        "bcf",
                        "bed",
                        "ped",
                        "tped"
                    ]
                },
                "groups": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Input grouping file.",
                    "help_text": "Path to a file detailing the group of each input sample."
                },
                "spp": {
                    "title": "Species",
                    "type": "string",
                    "description": "plink species code",
                    "help_text": "Provides the species for the plink command",
                    "enum": [
                        "cow",
                        "dog",
                        "horse",
                        "mouse",
                        "rice",
                        "sheep",
                        "human"
                    ]
                },
                "karyo": {
                    "title": "Chromosome number",
                    "type": "integer",
                    "description": "Provide the chromosome number for the species",
                    "help_text": "If the species is not directly supported by plink, this flag can provide the karyotype."
                },
                "bootstrap": {
                    "default": 10,
                    "min": 1,
                    "type": "integer",
                    "description": "Number of bootstraps",
                    "help_text": "Higher bootstraps provide a better resolution of the node stability, but increase the run time."
                },
                "subset": {
                    "default": 1000000,
                    "min": 1,
                    "type": "integer",
                    "description": "Number of markers in each bootstraps",
                    "help_text": "Larger panel size improve the tree estimate, but increase the run time."
                },
                "dpi": {
                    "title": "Image resolution",
                    "default": 300,
                    "type": "integer",
                    "description": "Output resolution",
                    "help_text": "Resolution of the output image."
                },
                "size": {
                    "default": 10,
                    "type": "integer",
                    "description": "Output image size",
                    "help_text": "Size of the output image."
                },
                "mrkS": {
                    "title": "Marker size",
                    "default": 1,
                    "type": "integer",
                    "description": "Size of the markers in the image",
                    "help_text": "Size of the output image."
                },
                "mrkR": {
                    "title": "Marker scale rate",
                    "min": 0.1,
                    "default": 1.0,
                    "type": "number",
                    "description": "Size of the markers in the image",
                    "help_text": "Size of the output image."
                },
                "tool": {
                    "type": "string",
                    "default": "biopython",
                    "enum": [
                        "biopython",
                        "phylip"
                    ],
                    "description": "What tool to use to build the consensus tree.",
                    "help_text": "Different consensus tools can lead to different tree."
                },
                "method": {
                    "type": "string",
                    "default": "nj",
                    "enum": [
                        "upgma",
                        "nj"
                    ],
                    "description": "What method to use to build the consensus tree.",
                    "help_text": "Different consensus methods can lead to different tree."
                },
                "outgroup": {
                    "title": "Outgroup",
                    "type": "string",
                    "description": "Outgroup for the phylogenetic tree",
                    "help_text": "Setting an outgroup might help in defining the right tree topology."
                },
                "halfcalls": {
                    "title": "VCF half-calls",
                    "type": "string",
                    "default": "m",
                    "enum": [
                        "m",
                        "h",
                        "r"
                    ],
                    "description": "How plink should deal with half-calls (missing, haploid or reference)",
                    "help_text": "Allow plink to deal with the half calls in a VCF e.g. for mitogenome and sex chromosomes in male mammalians."
                },
                "allowExtrChr": {
                    "title": "VCF half-calls",
                    "type": "boolean",
                    "description": "Allow extra chromosomes"
                },
                "setHHmiss": {
                    "title": "VCF half-calls",
                    "type": "boolean",
                    "description": "Force heterozygous haploid genotypes to missing in --make-bed/--recode output."
                }
            }
        },
        "multiprocessing": {
            "title": "Multiprocessing options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.",
            "properties": {
                "plink_cpus": {
                    "type": "integer",
                    "description": "Number of CPUs to request for the plink analysis.",
                    "default": 2,
                    "min": 1,
                    "fa_icon": "fas fa-microchip"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "enable_conda": {
                    "type": "boolean",
                    "description": "Use anaconda to create the environment.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "mamba": {
                    "type": "boolean",
                    "description": "Use mamba instead of conda to create the environment.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/multiprocessing"
        },
        {
            "$ref": "#/$defs/institutional_config_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        }
    ]
}
